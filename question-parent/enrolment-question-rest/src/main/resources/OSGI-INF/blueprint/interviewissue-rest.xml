<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <reference id="interviewIssueService" interface="com.kalix.enrolment.question.api.biz.IQuestionService" filter="(beanName=InterviewIssue)"/>
    <reference id="interviewIssueRepeatedService" interface="com.kalix.enrolment.question.api.biz.IRepeatedService" filter="(beanName=InterviewIssue)"/>
    <reference id="interviewIssueAuditService" interface="com.kalix.enrolment.question.api.biz.IQuestionAuditService" filter="(beanName=InterviewIssue)"/>

    <camelContext id="interviewIssueCamel" xmlns="http://camel.apache.org/schema/blueprint">

        <restConfiguration component="servlet" bindingMode="json">
            <dataFormatProperty key="prettyPrint" value="${rest.pretty}"/>
        </restConfiguration>

        <rest path="/interviewissues" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>interviewIssue rest service</description>

            <!-- this is a rest GET to find all interviewIssues -->
            <get id="route-getAllInterviewIssue">
                <description>Find all interviewIssues</description>
                <to uri="bean:interviewIssueService?method=getAllEntityByQuery(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>

            <!-- this is a rest POST to create a interviewIssue -->
            <post id="route-addInterviewIssue" type="com.kalix.enrolment.question.entities.InterviewIssueBean"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Create a interviewIssue</description>
                <to uri="bean:interviewIssueService?method=saveEntity"/>
            </post>
        </rest>

        <rest path="/interviewissues/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view a interviewIssue by the given id -->
            <get id="route-getInterviewIssue">
                <description>Find interviewIssue by id</description>
                <to uri="bean:interviewIssueService?method=getEntity(${header.id})"/>
            </get>
            <put id="route-update-InterviewIssue" type="com.kalix.enrolment.question.entities.InterviewIssueBean"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a InterviewIssue</description>
                <to uri="bean:interviewIssueService?method=updateEntity"/>
            </put>
            <!-- this is a rest DELETE to delete a interviewIssue -->
            <!--<delete id="route-deleteInterviewIssue" outType="com.kalix.framework.core.api.persistence.JsonStatus">-->
                <!--<description>Delete a interviewIssue</description>-->
                <!--<to uri="bean:interviewIssueService?method=deleteEntity(${header.id})"/>-->
            <!--</delete>-->
        </rest>

        <rest path="/interviewissues/delete/logicDelete" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <delete id="route-logicDeleteInterviewIssue" type="com.kalix.enrolment.question.entities.InterviewIssueBean"
                    outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Logic Delete a interviewIssue</description>
                <to uri="bean:interviewIssueService?method=logicDeleteEntity(${body})"/>
            </delete>
        </rest>

        <rest path="/interviewissues/delete/batchLogicDelete" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <delete id="route-batchLogicDeleteInterviewIssue" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Batch Logic Delete interviewIssues</description>
                <to uri="bean:interviewIssueService?method=batchLogicDeleteEntity(${header.entityIds},${header.reason})"/>
            </delete>
        </rest>

        <rest path="/interviewissues/export/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>interviewissue rest service</description>
            <!-- this is a rest GET to find all interviewissues -->
            <get id="route-getExportInterviewIssue">
                <description>Find all interviewissues</description>
                <to uri="bean:interviewIssueService?method=getAllEntityforReport(${header.jsonStr})"/>
            </get>
        </rest>

        <rest path="/interviewissues/repeated/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>interviewIssue rest service</description>
            <!--<get id="route-getAllInterviewIssueRepeates" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeates</description>
                <to uri="bean:interviewIssueRepeatedService?method=getRepeates(${header.jsonStr}, ${header.isAll})"/>
            </get>-->

            <post id="route-getRepeatedInterviewIssues" type="com.kalix.enrolment.question.dto.model.CompareQuestionDTO"
                 outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeated interviewIssues</description>
                <to uri="bean:interviewIssueRepeatedService?method=validateRepeates(${body})"/>
            </post>
        </rest>

        <rest path="/interviewissues/repeated/list/{questionId}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!--<get id="route-getRepeatedInterviewIssuesById">-->
                <!--<description>Find all repeated by id</description>-->
                <!--<to uri="bean:interviewIssueRepeatedService?method=getRepeates(${header.questionId})"/>-->
            <!--</get>-->

            <put id="route-update-RepeatedInterviewIssue" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a RepeatedInterviewIssue</description>
                <to uri="bean:interviewIssueRepeatedService?method=doSaveRepeate(${header.questionId})"/>
            </put>

            <delete id="route-logicDeleteRepeatedInterviewIssue" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Logic Delete a repeated interviewIssue</description>
                <to uri="bean:interviewIssueRepeatedService?method=doDeleteRepeate(${header.questionId})"/>
            </delete>
        </rest>

        <rest path="/interviewissues/repeated/compare/{questionId}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>interviewIssue repeated compare rest service</description>
            <post id="route-compareRepeatedInterviewIssues"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>compare interviewIssue</description>
                <to uri="bean:interviewIssueRepeatedService?method=compareSingleSimilarity(${header.questionId})"/>
            </post>
        </rest>

        <rest path="/interviewissues/check/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>interviewissue check rest service</description>
            <get id="route-getAllCheckInterviewIssue">
                <description>Find all check interviewissues</description>
                <to uri="bean:interviewIssueAuditService?method=getAllAuditEntityByQuery(${header.page},${header.limit},${header.jsonStr},${header.subType})"/>
            </get>

            <put id="route-batch-InterviewIssueCheck" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Batch check InterviewIssue</description>
                <to uri="bean:interviewIssueAuditService?method=batchAudit(${header.entityIds},${header.checkFlag},${header.reason})"/>
            </put>
        </rest>

        <rest path="/interviewissues/check/list/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view a check interviewissue by the given id -->
            <get id="route-getCheckInterviewIssue">
                <description>Find check interviewissue by id</description>
                <to uri="bean:interviewIssueService?method=getEntity(${header.id})"/>
            </get>
        </rest>
    </camelContext>
</blueprint>