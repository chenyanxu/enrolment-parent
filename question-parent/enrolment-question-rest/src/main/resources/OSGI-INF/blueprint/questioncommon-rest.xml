<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <reference id="questionCommonBizService" interface="com.kalix.enrolment.question.api.biz.IQuestionCommonBizService"/>

    <camelContext id="questionCommonBizCamel" xmlns="http://camel.apache.org/schema/blueprint">

        <restConfiguration component="servlet" bindingMode="json">
            <dataFormatProperty key="prettyPrint" value="${rest.pretty}"/>
        </restConfiguration>

        <rest path="/questionrepeateds" consumes="application/json;charset=utf-8" produces="application/json">
            <description>repeate rest service</description>
            <!-- this is a rest GET to find all repeateds -->
            <get id="route-getAllQuestionRepeateds" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all question repeateds</description>
                <to uri="bean:questionCommonBizService?method=getAllQuestionRepeateds(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>
        </rest>

        <rest path="/firstquestions" consumes="application/json;charset=utf-8" produces="application/json">
            <description>repeate rest service</description>
            <!-- this is a rest GET to find all repeates -->
            <get id="route-getFirstQuestions" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeates</description>
                <to uri="bean:questionCommonBizService?method=getFirstQuestions(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>
        </rest>

        <rest path="/firstquestions/{firstQuestionId}" consumes="application/json;charset=utf-8" produces="application/json">
            <description>repeate rest service</description>
            <!-- this is a rest GET to find all repeates -->
            <get id="route-getSecondQuestions" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeates by firstQuestionId</description>
                <to uri="bean:questionCommonBizService?method=getSecondQuestions(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>
        </rest>

        <rest path="/questiontestings" consumes="application/json;charset=utf-8" produces="application/json">
            <description>questionTesting rest service</description>
            <!-- this is a rest GET to find all questionTestings -->
            <get id="route-getAllQuestionTestings" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all questionTestings</description>
                <to uri="bean:questionCommonBizService?method=getAllQuestionTestings(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>
        </rest>

        <rest path="/testPaper" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>question common biz rest service</description>

            <!-- this is a rest GET to find all testPapers -->
            <get id="route-getTestPaper">
                <description>create testPaper</description>
                <to uri="bean:questionCommonBizService?method=autoCreateTestPaper(${header.id})"/>
            </get>

        </rest>
        <rest path="/deletePaper" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>deletePaper rest service</description>

            <!-- this is a rest GET to find all choices -->
            <post id="route-deletePaper">
                <description>deletePaper</description>
                <to uri="bean:questionCommonBizService?method=deletePaper(${header.id})"/>
            </post>

        </rest>

    </camelContext>
</blueprint>