<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <reference id="subjectService" interface="com.kalix.enrolment.question.api.biz.IQuestionService" filter="(beanName=Subject)"/>
    <reference id="subjectRepeatedService" interface="com.kalix.enrolment.question.api.biz.IRepeatedService" filter="(beanName=Subject)"/>
    <reference id="subjectAuditService" interface="com.kalix.enrolment.question.api.biz.IQuestionAuditService" filter="(beanName=Subject)"/>

    <camelContext id="subjectCamel" xmlns="http://camel.apache.org/schema/blueprint">

        <restConfiguration component="servlet" bindingMode="json">
            <dataFormatProperty key="prettyPrint" value="${rest.pretty}"/>
        </restConfiguration>

        <rest path="/subjects" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>subject rest service</description>

            <!-- this is a rest GET to find all subjects -->
            <get id="route-getAllSubject">
                <description>Find all subjects</description>
                <to uri="bean:subjectService?method=getAllEntityByQuery(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>

            <!-- this is a rest POST to create a subject -->
            <post id="route-addSubject" type="com.kalix.enrolment.question.entities.SubjectBean"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Create a subject</description>
                <to uri="bean:subjectService?method=saveEntity"/>
            </post>
        </rest>

        <rest path="/subjects/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view a subject by the given id -->
            <get id="route-getSubject">
                <description>Find subject by id</description>
                <to uri="bean:subjectService?method=getEntity(${header.id})"/>
            </get>
            <put id="route-update-Subject" type="com.kalix.enrolment.question.entities.SubjectBean"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a Subject</description>
                <to uri="bean:subjectService?method=updateEntity"/>
            </put>
            <!-- this is a rest DELETE to delete a subject -->
            <!--<delete id="route-deleteSubject" outType="com.kalix.framework.core.api.persistence.JsonStatus">-->
                <!--<description>Delete a subject</description>-->
                <!--<to uri="bean:subjectService?method=deleteEntity(${header.id})"/>-->
            <!--</delete>-->
        </rest>

        <rest path="/subjects/delete/logicDelete" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <delete id="route-logicDeleteSubject" type="com.kalix.enrolment.question.entities.SubjectBean"
                    outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Logic Delete a subject</description>
                <to uri="bean:subjectService?method=logicDeleteEntity(${body})"/>
            </delete>
        </rest>

        <rest path="/subjects/delete/batchLogicDelete" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <delete id="route-batchLogicDeleteSubject" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Batch Logic Delete subjects</description>
                <to uri="bean:subjectService?method=batchLogicDeleteEntity(${header.entityIds},${header.reason})"/>
            </delete>
        </rest>

        <rest path="/subjects/export/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>subject rest service</description>
            <!-- this is a rest GET to find all subjects -->
            <get id="route-getExportSubject">
                <description>Find all subjects</description>
                <to uri="bean:subjectService?method=getAllEntityforReport(${header.jsonStr})"/>
            </get>
        </rest>

        <rest path="/subjects/repeated/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>subject rest service</description>
            <get id="route-getAllSubjectRepeates" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeates</description>
                <to uri="bean:subjectRepeatedService?method=getRepeates(${header.jsonStr}, ${header.isAll})"/>
            </get>

            <post id="route-getRepeatedSubjects" type="com.kalix.enrolment.question.dto.model.BaseQuestionDTO"
                 outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeated subjects</description>
                <to uri="bean:subjectRepeatedService?method=validateRepeates(${body})"/>
            </post>
        </rest>

        <rest path="/subjects/repeated/list/{questionId}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <get id="route-getRepeatedSubjectsById">
                <description>Find all repeated by id</description>
                <to uri="bean:subjectRepeatedService?method=getRepeates(${header.questionId})"/>
            </get>

            <put id="route-update-RepeatedSubject" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a RepeatedSubject</description>
                <to uri="bean:subjectRepeatedService?method=doSaveRepeate(${header.questionId})"/>
            </put>

            <delete id="route-logicDeleteRepeatedSubject" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Logic Delete a repeated subject</description>
                <to uri="bean:subjectRepeatedService?method=doDeleteRepeate(${header.questionId})"/>
            </delete>
        </rest>

        <rest path="/subjects/check/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>subject check rest service</description>
            <get id="route-getAllCheckSubject">
                <description>Find all check subjects</description>
                <to uri="bean:subjectAuditService?method=getAllAuditEntityByQuery(${header.page},${header.limit},${header.subType})"/>
            </get>

            <put id="route-batch-SubjectCheck" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Batch check Subject</description>
                <to uri="bean:subjectAuditService?method=batchAudit(${header.entityIds},${header.checkFlag},${header.reason})"/>
            </put>
        </rest>

        <rest path="/subjects/check/list/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view a check subject by the given id -->
            <get id="route-getCheckSubject">
                <description>Find check subject by id</description>
                <to uri="bean:subjectService?method=getEntity(${header.id})"/>
            </get>
        </rest>
    </camelContext>
</blueprint>