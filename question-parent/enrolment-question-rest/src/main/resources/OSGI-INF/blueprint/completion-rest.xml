<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <reference id="completionService" interface="com.kalix.enrolment.question.api.biz.IQuestionService" filter="(beanName=Completion)"/>
    <reference id="completionRepeatedService" interface="com.kalix.enrolment.question.api.biz.IRepeatedService" filter="(beanName=Completion)"/>
    <reference id="completionAuditService" interface="com.kalix.enrolment.question.api.biz.IQuestionAuditService" filter="(beanName=Completion)"/>

    <camelContext id="completionCamel" xmlns="http://camel.apache.org/schema/blueprint">

        <restConfiguration component="servlet" bindingMode="json">
            <dataFormatProperty key="prettyPrint" value="${rest.pretty}"/>
        </restConfiguration>

        <rest path="/completions" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>completion rest service</description>

            <!-- this is a rest GET to find all completions -->
            <get id="route-getAllCompletion">
                <description>Find all completions</description>
                <to uri="bean:completionService?method=getAllEntityByQuery(${header.page},${header.limit},${header.jsonStr},${header.sort})"/>
            </get>

            <!-- this is a rest POST to create a completion -->
            <post id="route-addCompletion" type="com.kalix.enrolment.question.entities.CompletionBean"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Create a completion</description>
                <to uri="bean:completionService?method=saveEntity"/>
            </post>
        </rest>

        <rest path="/completions/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view a completion by the given id -->
            <get id="route-getCompletion">
                <description>Find completion by id</description>
                <to uri="bean:completionService?method=getEntity(${header.id})"/>
            </get>
            <put id="route-update-Completion" type="com.kalix.enrolment.question.entities.CompletionBean"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a Completion</description>
                <to uri="bean:completionService?method=updateEntity"/>
            </put>
            <!-- this is a rest DELETE to delete a completion -->
            <!--<delete id="route-deleteCompletion" outType="com.kalix.framework.core.api.persistence.JsonStatus">-->
                <!--<description>Delete a completion</description>-->
                <!--<to uri="bean:completionService?method=deleteEntity(${header.id})"/>-->
            <!--</delete>-->
        </rest>

        <rest path="/completions/delete/logicDelete" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <delete id="route-logicDeleteCompletion" type="com.kalix.enrolment.question.entities.CompletionBean"
                    outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Logic Delete a completion</description>
                <to uri="bean:completionService?method=logicDeleteEntity(${body})"/>
            </delete>
        </rest>

        <rest path="/completions/delete/batchLogicDelete" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <delete id="route-batchLogicDeleteCompletion" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Batch Logic Delete completions</description>
                <to uri="bean:completionService?method=batchLogicDeleteEntity(${header.entityIds},${header.reason})"/>
            </delete>
        </rest>

        <rest path="/completions/export/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>completion rest service</description>
            <!-- this is a rest GET to find all completions -->
            <get id="route-getExportCompletion">
                <description>Find all completions</description>
                <to uri="bean:completionService?method=getAllEntityforReport(${header.jsonStr})"/>
            </get>
        </rest>

        <rest path="/completions/repeated/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>completion rest service</description>
            <!--<get id="route-getAllCompletionRepeates" outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeates</description>
                <to uri="bean:completionRepeatedService?method=getRepeates(${header.jsonStr}, ${header.isAll})"/>
            </get>-->

            <post id="route-getRepeatedCompletions" type="com.kalix.enrolment.question.dto.model.CompareQuestionDTO"
                 outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Find all repeated completions</description>
                <to uri="bean:completionRepeatedService?method=validateRepeates(${body})"/>
            </post>
        </rest>

        <rest path="/completions/repeated/list/{questionId}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!--<get id="route-getRepeatedCompletionsById">
                <description>Find all repeated by id</description>
                <to uri="bean:completionRepeatedService?method=getRepeates(${header.questionId})"/>
            </get>-->

            <put id="route-update-RepeatedCompletion" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Updates a RepeatedCompletion</description>
                <to uri="bean:completionRepeatedService?method=doSaveRepeate(${header.questionId})"/>
            </put>

            <delete id="route-logicDeleteRepeatedCompletion" outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Logic Delete a repeated completion</description>
                <to uri="bean:completionRepeatedService?method=doDeleteRepeate(${header.questionId})"/>
            </delete>
        </rest>

        <rest path="/completions/repeated/compare/{questionId}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>completion repeated compare rest service</description>
            <post id="route-compareRepeatedCompletions"
                  outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>compare completion</description>
                <to uri="bean:completionRepeatedService?method=compareSingleSimilarity(${header.questionId})"/>
            </post>
        </rest>

        <rest path="/completions/check/list" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>completion check rest service</description>
            <get id="route-getAllCheckCompletion">
                <description>Find all check completions</description>
                <to uri="bean:completionAuditService?method=getAllAuditEntityByQuery(${header.page},${header.limit},${header.jsonStr},${header.subType})"/>
            </get>

            <put id="route-batch-CompletionCheck" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Batch check Completion</description>
                <to uri="bean:completionAuditService?method=batchAudit(${header.entityIds},${header.checkFlag},${header.reason})"/>
            </put>
        </rest>

        <rest path="/completions/check/list/{id}" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <!-- this is a rest GET to view a check completion by the given id -->
            <get id="route-getCheckCompletion">
                <description>Find check completion by id</description>
                <to uri="bean:completionService?method=getEntity(${header.id})"/>
            </get>
        </rest>

        <rest path="/completions/check/progress" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>completion check progress rest service</description>
            <get id="route-getAllCheckCompletionProgress">
                <description>Find check completions Progress</description>
                <to uri="bean:completionService?method=getAuditProgress(${header.jsonStr})"/>
            </get>
        </rest>
    </camelContext>
</blueprint>